name: Deployment - Reusable Workflow

on:
  workflow_call:
    secrets:
      k8s-kubeconfig:
        required: true
      mongodb-password:
        required: true

jobs:
  reuse-deploy:
    environment:
      name: development
      url: https://${{steps.set-ingress-host-address.outputs.APP_INGRESS_HOST}}
    outputs:
      APP_INGRESS_URL: ${{steps.set-ingress-host-address.outputs.APP_INGRESS_HOST}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install kubectl CLI
        uses: azure/setup-kubectl@v3
        with:
          version: "v1.26.0"

      - name: Set Kubeconfig
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{secrets.KUBECONFIG}}

      - name: Fetch Kubernetes Cluster Details
        run: |
          kubectl version -short -o yaml
          echo -------------------------------------------------
          kubectl get nodes

      - name: Save Nginx Ingress Controller IP as a GITHUB Environment Variable
        run: |
          echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath="{.status.loadbalancer.ingress[0].ip}")" >> "$GITHUB_ENV"

      - name: Replace Tokens in Manifest files
        uses: cschleiden/replace-tokens@v1
        with:
          tokenPrefix: "_{_"
          tokenSuffix: "_}_"
          files: '["kubernetes/development/*.yaml"]'
        env:
          NAMESPACE: ${{vars.NAMESPACE}}
          REPLICAS: ${{vars.REPLICAS}}
          IMAGE: ${{env.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
          INGRESS_IP: ${{env.INGRESS_IP}}

      - name: Check files
        run: |
          cat kubernetes/development/*.yaml

      - name: Create MongoDB Secret
        run: |
          kubectl -n ${{vars.NAMESPACE}} create secret generic mongo-db-creds \
          --from-literal=MONGO_URI=${{env.MONGO_URI}} \
          --from-literal=MONGO_USERNAME=${{env.MONGO_USERNAME}} \
          --from-literal=MONGO_PASSWORD=${{env.MONGO_PASSWORD}} \
          --save-config \
          --dry-run=client \
          -o yaml | kubectl apply -f

      - name: Deploy to DEV env
        run: |
          kubectl apply -f kubernetes/development/

      - name: Set App Ingress Host URL
        id: set-ingress-host-address
        run: |
          echo "APP_INGRESS_HOST=$(kubectl -n ${{vars.NAMESPACE}} get ingress -o jsonpath="{.items[0].spec.tls[0].hosts[0]}")" >> "GITHUB_OUTPUT"
